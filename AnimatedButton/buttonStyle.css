body{
    background: rgb(238,174,202);
    background: radial-gradient(circle, rgb(250, 208, 226) 0%, rgba(148,187,233,1) 100%);
    
}

.btn{
    font-size: 2rem;
    font-weight: 700;
    padding: 0.5em 1em;
    color:white;
    background-color: lightpink;
    border: 10px solid rgb(181, 211, 245);
    /* color: var(--clr-accent); */
    /* background-color: var(--clr-accent); */
    /* border: 10px solid var(--clr-accent); */
    border-radius:10px;
    position:absolute;
    top: 50%;
    left: 50%;
    

/*======================================+
 |~-~HERE IS WHERE THE MAGIC HAPPENS!~-~|
 |~-~-~IT MIGHT LOOK A LITTLE HARD,~-~-~|
 |BUT YOU CAN DO IT, I BELIEVE IN YOU <3|
 +======================================*/


   /******************************************************
    *  - follow each comment's code example              *
    *  - also find and review our button's hover element *
    *    before starting to animate it                   *
    *  - let's have fun <(^.^<) (>^.^)>                  *
    ******************************************************/



    /** transform-property is asking which property we should be changing, so look to the .btn:hover to see what we are manipulating, in this case the transform property */

    /*>> transition-property: transform; */

    /** transition-duration is asking how long it should take for the transition to complete */

    /*>> transition-duration: 0.3s; */

    /** the transition-timing-function defines the acceleration curve for the transition */
    /** the common values are: ease-in, ease-out, ease-in-out,linear, and ease(which is the default)   */
    
    /*>> transition-timing-function: ease; */

    /** the transition-delay defines the delay before the transition is hovered on, in this case we want it to happen immediatly, so we'll set it to 0s */
    /*>> transition-delay: 0s; */

    /** YAY! now it looks a lot better! combining transition-property/duration/timing-function/delay allowed for a smoother transition, but we can do even better */
    /** this is also the order in which we can truncate our code to create a sequence in one line */

    /** e.g */
    /*>> transition: transform 0.3s ease 0s; */

    /** we can shorten our own code further by not including default settings, like delay:0s  and timing-function:ease   */
    /** e.g */
    /*>> transition: transform 0.3s; */

    /** we can add each of the properties to our transition by separating them with commas as follows */
    /*>> transition: tranform 0.3s, background-color 0.3s, color 0.3s; */

    /** this is great, but if we had more than 3 properties it would take a lot of time If you know that our ordered properties are going to all have the same timeframe, we can use transition:all */

    transition: all 0.5s;
}

/*===========================================+
 |TADA!! NOW WE HAVE A LOVELY ANIMATED BUTTON|
 |~-~-~-~-~-~-~-~-~-~-~}~-~-~-~-~-~-~-~-~-~-~|
 +===========================================*/

/** with .btn:hover, we are using transform:translateY to float the button up when hovering */
/** but, hover alone happens too abruptly, so we're going to add transition-properties to our .btn class above in order to create some smoothness*/

.btn:hover{
    transform: translateY(-55px);

    /** what if we want more than one thing to happen upon hover? no worries! */
   
    /** let's say we want the button's background to complement the border color and the font color to change as well */

    background-color: rgba(148,187,233,1);
    color: rgb(250, 208, 226);
}